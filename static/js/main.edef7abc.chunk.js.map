{"version":3,"sources":["components/utils/_media-queries.js","components/utils/Buttons.js","components/utils/_var.js","components/utils/Cards.js","components/Intro.js","components/quiz/Question.js","components/quiz/QuestionCount.js","components/quiz/AnswerOption.js","components/quiz/Quiz.js","components/definitions/ColorsDef.js","components/utils/ResultWrapper.js","components/result/Colors.js","components/definitions/LettersDef.js","components/result/Letters.js","components/definitions/BriggsDef.js","components/result/Briggs.js","components/result/Results.js","api/quizQuestions.js","components/Question.js","App.js","registerServiceWorker.js","index.js"],"names":["sizes","giant","laptop","tablet","largerPhone","media","Object","keys","reduce","accumulator","label","emSize","css","StartBtn","styled","div","NextBtn","fonts","colors","IntroCard","attrs","className","QuestionCard","CardDef","Wrapper","Intro","title","_onStartClick","onClick","Question","props","content","QuestionCount","counter","total","AnswerOption","checked","answerType","answer","id","value","name","disabled","onChange","onAnswerSelected","type","htmlFor","answerContent","Quiz","questionId","questionTotal","question","answerOptions","map","key","BrownDef","onBackClick","aria-hidden","GreenDef","BlueDef","RedDef","Colors","state","showBrownDef","showGreenDef","showBlueDef","showRedDef","onBrownDefClick","bind","onGreenDefClick","onBlueDefClick","onRedDefClick","this","_onNextClick","renderBrownDef","renderGreenDef","renderBlueDef","renderRedDef","resultColors","renderNextBtn","setState","Component","LetterA","LetterB","LetterC","LetterD","Letters","showLetterA","showLetterB","showLetterC","showLetterD","onLetterA_Click","onLetterB_Click","onLetterC_Click","onLetterD_Click","renderLetterA","renderLetterB","renderLetterC","renderLetterD","resultLetters","ISTJ","ISFJ","INFJ","INTJ","ISTP","ISFP","INFP","INTP","ESTP","ESFP","ENFP","ENTP","ESTJ","ESFJ","ENFJ","ENTJ","Briggs","showISTJ","showISFJ","showINFJ","showINTJ","showISTP","showISFP","showINFP","showINTP","showESTP","showESFP","showENFP","showENTP","showESTJ","showESFJ","showENFJ","showENTJ","onISTJ_click","onISFJ_click","onINFJ_click","onINTJ_click","onISTP_click","onISFP_click","onINFP_click","onINTP_click","onESTP_click","onESFP_click","onENFP_click","onENTP_click","onESTJ_click","onESFJ_click","onENFJ_click","onENTJ_click","renderISTJ","renderISFJ","renderINFJ","renderINTJ","renderISTP","renderISFP","renderINFP","renderINTP","renderESTP","renderESFP","renderENFP","renderENTP","renderESTJ","renderESFJ","renderENFJ","renderENTJ","resultBriggs","Results","showColorsResult","showLettersResult","showBriggsResult","renderResultColors","renderResultLetters","renderBriggsResult","setTimeout","quizQuestions","answers","answersCount","Green","Brown","Blue","Red","A","B","C","D","E","I","S","N","T","F","J","P","handleAnswerSelected","answer_array","split","briggsAnswer","colorsAnswer","lettersAnswer","length","applyAnswer","event","setUserAnswer","currentTarget","setNextQuestion","setResults","getColorsResults","getLettersResults","getBriggsResults","briggsType","answersCountKeysColors","answersCountValuesColors","maxAnswerCountColors","Math","max","apply","filter","answersCountKeysLetters","answersCountValuesLetters","maxAnswerCountLetters","renderResult","renderQuiz","App","showQuestion","renderQuestion","renderIntro","animateOut","anime","targets","translateX","elasticity","el","i","l","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","createGlobalStyle","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.edef7abc.chunk.js","sourcesContent":["import { css } from 'styled-components'\n\nconst sizes = {\n  giant: 1824,\n  laptop: 1224,\n  tablet: 775,\n  largerPhone: 510\n}\n\n// iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((accumulator, label) => {\n  // use em in breakpoints to work properly cross-browser and support users\n  // changing their browsers font-size: https://zellwk.com/blog/media-query-units/\n  const emSize = sizes[label] / 16\n  accumulator[label] = (...args) => css`\n    @media (min-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `\n  return accumulator\n}, {})\n","import styled from 'styled-components'\nimport { media } from './_media-queries'\n\nconst StartBtn = styled.div`\n  display: block;\n  width: 12em;\n  height: 3.5em;\n  color: #fff;\n  position: absolute;\n  line-height: 3.5em;\n  bottom: 2em;\n  left: 0;\n  right: 0;\n  margin: auto;\n  overflow: hidden;\n  border-radius: 5px;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.3);\n  transition: all 0.25s cubic-bezier(0.31, -0.105, 0.43, 1.4);\n  span,\n  .icon {\n    display: block;\n    height: 100%;\n    text-align: center;\n    position: absolute;\n    top: 0;\n    color: #fff;\n  }\n  span {\n    width: 72%;\n    line-height: inherit;\n    font-size: 1em;\n    text-transform: uppercase;\n    left: 0;\n    transition: all 0.25s cubic-bezier(0.31, -0.105, 0.43, 1.4);\n  }\n  .icon {\n    width: 28%;\n    right: 0;\n    transition: all 0.25s cubic-bezier(0.31, -0.105, 0.43, 1.4);\n  }\n  .fa {\n    font-size: 1em;\n    transition: all 0.25s cubic-bezier(0.31, -0.105, 0.43, 1.4), height 0.25s ease;\n  }\n  &:hover {\n    opacity: 0.9;\n    animation: none;\n    span {\n      left: -72%;\n      opacity: 0;\n    }\n    .icon {\n      width: 100%;\n      .fa {\n        font-size: 1em;\n      }\n    }\n  }\n  ${media.laptop`width:15em;`};\n`\n\nconst NextBtn = styled.div`\n  display: block;\n  width: 12em;\n  height: 3.5em;\n  color: #fff;\n  position: absolute;\n  line-height: 3.5em;\n  bottom: 1em;\n  left: 0;\n  right: 0;\n  margin: auto;\n  overflow: hidden;\n  border-radius: 5px;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.3);\n  transition: all 0.25s cubic-bezier(0.31, -0.105, 0.43, 1.4);\n  ${media.laptop`bottom: 4em;`};\n  span,\n  .icon {\n    display: block;\n    height: 100%;\n    text-align: center;\n    position: absolute;\n    top: 0;\n    color: grey;\n  }\n  span {\n    width: 72%;\n    line-height: inherit;\n    font-size: 1em;\n    text-transform: uppercase;\n    left: 0;\n    transition: all 0.25s cubic-bezier(0.31, -0.105, 0.43, 1.4);\n  }\n  .icon {\n    width: 28%;\n    right: 0;\n    transition: all 0.25s cubic-bezier(0.31, -0.105, 0.43, 1.4);\n  }\n  .fa {\n    font-size: 1em;\n    transition: all 0.25s cubic-bezier(0.31, -0.105, 0.43, 1.4), height 0.25s ease;\n  }\n  &:hover {\n    opacity: 0.9;\n    animation: none;\n    span {\n      left: -72%;\n      opacity: 0;\n    }\n    .icon {\n      width: 100%;\n      .fa {\n        font-size: 1em;\n      }\n    }\n  }\n  ${media.laptop`width:15em;`};\n`\n\nexport { StartBtn, NextBtn }\n","const fonts = {\n  $titleFont: 'Ubuntu, sans-serif',\n  $mainFont: 'Raleway, sans-serif',\n  $latoFont: 'Lato, sans-serif'\n}\n\nconst colors = {\n  $colorBg: '#333',\n  $colorCardBg: '#302f34',\n  $colorGold: '#d4cd96'\n}\n\nexport { fonts, colors }\n","import styled from 'styled-components'\nimport { fonts, colors } from './_var'\nimport { media } from './_media-queries'\n\nexport const IntroCard = styled.div.attrs({\n  className: 'card'\n})`\n  position: absolute;\n  height: 60%;\n  width: 80%;\n  top: 20%;\n  left: 0;\n  right: 0;\n  margin: auto;\n  box-shadow: 0px -6px 8px 0px rgba(0, 0, 0, 0.1), 0px 6px 8px 0px rgba(0, 0, 0, 0.1),\n    6px 0px 8px 0px rgba(0, 0, 0, 0.1), -6px 0px 8px 0px rgba(0, 0, 0, 0.1);\n  background: ${colors.$colorCardBg};\n  background: repeating-linear-gradient(135deg, rgba(0, 0, 0, 0.3), transparent 1px, rgba(0, 0, 0, 0.3) 2px);\n  background-size: 3px 3px;\n  ${media.tablet`width: 90%;`};\n  ${media.laptop`width: 60%;`};\n  .corner {\n    backface-visibility: hidden;\n    border-right: 2px solid #d4cd96;\n    border-top: 2px solid #d4cd96;\n    height: 12px;\n    position: absolute;\n    width: 12px;\n    &:nth-of-type(1) {\n      right: 5%;\n      top: 5%;\n    }\n    &:nth-of-type(2) {\n      left: 5%;\n      top: 5%;\n      transform: rotateZ(-90deg);\n    }\n    &:nth-of-type(3) {\n      bottom: 5%;\n      left: 5%;\n      transform: rotateZ(180deg);\n    }\n    &:nth-of-type(4) {\n      bottom: 5%;\n      right: 5%;\n      transform: rotateZ(90deg);\n    }\n  }\n`\n\nexport const QuestionCard = styled.div.attrs({\n  className: 'card'\n})`\n  position: relative;\n  width: 100%;\n  margin: 0 auto;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.3);\n  background: ${colors.$colorCardBg};\n  background: repeating-linear-gradient(135deg, rgba(0, 0, 0, 0.3), transparent 1px, rgba(0, 0, 0, 0.3) 2px);\n  background-size: 3px 3px;\n  color: #fff;\n  ${media.tablet`width: 90%;`};\n  ${media.laptop`width: 60%;`};\n  .corner {\n    backface-visibility: hidden;\n    border-right: 2px solid #d4cd96;\n    border-top: 2px solid #d4cd96;\n    height: 12px;\n    position: absolute;\n    width: 12px;\n    &:nth-of-type(1) {\n      right: 5%;\n      top: 5%;\n    }\n    &:nth-of-type(2) {\n      left: 5%;\n      top: 5%;\n      transform: rotateZ(-90deg);\n    }\n    &:nth-of-type(3) {\n      bottom: 5%;\n      left: 5%;\n      transform: rotateZ(180deg);\n    }\n    &:nth-of-type(4) {\n      bottom: 5%;\n      right: 5%;\n      transform: rotateZ(90deg);\n    }\n  }\n`\n\nexport const CardDef = styled.div.attrs({\n  className: 'card'\n})`\n  position: relative;\n  width: 100%;\n  margin: 0 auto;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.3);\n  background: ${colors.$colorCardBg};\n  background: repeating-linear-gradient(135deg, rgba(0, 0, 0, 0.3), transparent 1px, rgba(0, 0, 0, 0.3) 2px);\n  background-size: 3px 3px;\n  color: #000;\n  ${media.tablet`width: 90%;`};\n  ${media.laptop`width: 60%;`};\n  h1 {\n    position: relative;\n    font-family: ${fonts.$titleFont};\n    font-size: 1.1em;\n    color: #870399;\n    text-align: center;\n    margin-top: 2em;\n    ${media.tablet`font-size: 1.5em; letter-spacing: 1.5px; margin-top: 3em;`};\n    ${media.laptop`font-size: 2em; letter-spacing: 2px; margin-top: 1.5em;`};\n  }\n  .close {\n    position: absolute;\n    left: 3%;\n    top: 2%;\n    color: #870399;\n    text-shadow: none;\n    ${media.tablet`font-size: 1.8em;`};\n    ${media.laptop`font-size: 2em; top: 5%;`};\n  }\n  p {\n    padding: 1em 2.5em;\n    font-size: 1em;\n    font-family: ${fonts.$latoFont};\n    ${media.tablet`font-size: 1.5em; padding: 1.5em 2em;`};\n    ${media.laptop`font-size: 2em; padding: 1em 2.5em;`};\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { StartBtn } from '../components/utils/Buttons'\nimport { IntroCard } from '../components/utils/Cards'\nimport { fonts, colors } from '../components/utils/_var'\nimport { media } from '../components/utils/_media-queries'\n\nconst Wrapper = styled.div`\n  position: fixed;\n  min-height: 100%;\n  max-width: 100%;\n  background: ${colors.$colorBg};\n  h1 {\n    position: relative;\n    font-family: ${fonts.$titleFont};\n    font-size: 1.1em;\n    color: ${colors.$colorGold};\n    text-align: center;\n    padding-top: 2em;\n    ${media.tablet`font-size: 1.5em; letter-spacing: 1.5px;`};\n    ${media.laptop`font-size: 2em; letter-spacing: 2px;`};\n  }\n  .list-group {\n    padding: 0 2em;\n    .list-group-item {\n      background: transparent;\n      padding: 1em 1.25em;\n      font-family: ${fonts.$latoFont};\n      border: 0;\n      margin-bottom: 0;\n      color: ${colors.$colorGold};\n      ${media.tablet`font-size: 1.3em`};\n      text-align: center;\n    }\n  }\n`\n\nconst Intro = ({ title, _onStartClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <IntroCard>\n        <div className=\"corner\" />\n        <div className=\"corner\" />\n        <div className=\"corner\" />\n        <div className=\"corner\" />\n        <h1>{title}</h1>\n        {/* TODO: cambiar esta parte */}\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">Consiste de 40 preguntas</li>\n          <li className=\"list-group-item\">Toma tu tiempo.</li>\n          <li className=\"list-group-item\">Responde honestamente.</li>\n        </ul>\n        <StartBtn onClick={_onStartClick}>\n          <span>Responder</span>\n          <div className=\"icon\">\n            <i className=\"fa fa-arrow-right\" />\n          </div>\n        </StartBtn>\n      </IntroCard>\n    </Wrapper>\n  )\n}\n\nexport default Intro\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { fonts } from '../utils/_var'\n\nconst Wrapper = styled.div`\n  .row {\n    margin: 1rem 0;\n    .col {\n      padding: 1rem;\n      h1 {\n        font-size: 1.3rem;\n        font-family: ${fonts.$mainFont};\n        text-align: center;\n      }\n    }\n  }\n`\n\nconst Question = props => {\n  return (\n    <Wrapper>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1>{props.content}</h1>\n        </div>\n      </div>\n    </Wrapper>\n  )\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n}\n\nexport default Question\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { fonts, colors } from '../utils/_var'\nimport { media } from '../utils/_media-queries'\n\nconst Wrapper = styled.div`\n  margin: 0.2em;\n  ${media.largerPhone`margin: .4em;`};\n  ${media.tablet`margin: 1em 2.5em;`};\n  ${media.laptop`margin: 1em 2.5em;`};\n  .row {\n    margin: 0;\n    .col {\n      padding: 0;\n      .questionCount {\n        position: relative;\n        padding: 1em;\n        font-size: 1em;\n        font-family: ${fonts.$latoFont};\n        color: ${colors.$colorGold};\n        ${media.largerPhone`font-size: 1.2em;`};\n      }\n    }\n  }\n`\n\nconst QuestionCount = props => {\n  return (\n    <Wrapper>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"questionCount\">\n            Pregunta <span>{props.counter}</span> de <span>{props.total}</span>\n          </div>\n        </div>\n      </div>\n    </Wrapper>\n  )\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n}\n\nexport default QuestionCount\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\nimport { fonts, colors } from '../utils/_var'\n\nconst Wrapper = styled.div`\n  li {\n    list-style-type: none;\n    input {\n      position: absolute;\n      opacity: 0;\n      z-index: -1;\n      & + label::before {\n        border-radius: 18px;\n      }\n      &:checked + label {\n        padding-left: 2rem;\n        color: #fff;\n      }\n      &:checked + label::before {\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background: ${colors.$colorGold};\n      }\n    }\n    label {\n      position: relative;\n      padding-left: 3rem;\n      line-height: 2.3rem;\n      cursor: pointer;\n      font-family: ${fonts.$mainFont};\n      color: ${colors.$colorGold};\n      &::before {\n        content: '';\n        position: absolute;\n        top: 5px;\n        left: 1rem;\n        display: block;\n        width: 25px;\n        height: 25px;\n        border: 2px solid ${colors.$colorGold};\n        border-radius: 4px;\n        z-index: -1;\n      }\n      &,\n      &::before {\n        transition: 0.5s all ease;\n      }\n    }\n  }\n`\n\nconst AnswerOption = props => {\n  return (\n    <Wrapper>\n      <li>\n        <input\n          checked={props.answerType === props.answer}\n          id={props.answerType}\n          value={props.answerType}\n          name={props.answerType}\n          disabled={props.answer}\n          onChange={props.onAnswerSelected}\n          type=\"radio\"\n        />\n        <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n          {props.answerContent}\n        </label>\n      </li>\n    </Wrapper>\n  )\n}\n\nAnswerOption.propTypes = {\n  answerType: PropTypes.string.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n}\n\nexport default AnswerOption\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Question from './Question'\nimport QuestionCount from './QuestionCount'\nimport AnswerOption from './AnswerOption'\nimport { media } from '../utils/_media-queries'\n\nconst Wrapper = styled.div`\n  margin: 1em 1em;\n  z-index: 1;\n  .row {\n    margin: 0;\n    ul {\n      padding: 1em 0;\n      margin: 0;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-around;\n      align-items: flex-start;\n      flex-grow: 1;\n      ${media.largerPhone`margin: 0 .8em;`};\n      ${media.tablet`flex-direction: row; padding-right: 1.5em;`};\n      ${media.laptop`margin-top: 1rem;`};\n    }\n  }\n`\n\nconst Quiz = props => {\n  const renderAnswerOptions = key => {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    )\n  }\n  return (\n    <Wrapper key={props.questionId}>\n      <QuestionCount counter={props.questionId} total={props.questionTotal} />\n      <div className=\"w-100\" />\n      <Question content={props.question} />\n      <div className=\"w-100\" />\n      <div className=\"row\">\n        <ul>{props.answerOptions.map(renderAnswerOptions)}</ul>\n      </div>\n    </Wrapper>\n  )\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n}\n\nexport default Quiz\n","import React from 'react'\nimport { CardDef } from '../utils/Cards'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  position: fixed;\n  min-height: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst BrownDef = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nconst GreenDef = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nconst BlueDef = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nconst RedDef = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport { BrownDef, GreenDef, BlueDef, RedDef }\n","import styled from 'styled-components'\nimport { media } from './_media-queries'\nimport { fonts, colors } from './_var'\n\nexport const Wrapper = styled.div.attrs({\n  className: 'jumbotron'\n})`\n  background-color: #f4f4f4;\n  .title {\n    font-family: ${fonts.$titleFont};\n    font-size: 2em;\n    text-align: center;\n    ${media.tablet`font-size: 2.5em`};\n    ${media.laptop`font-size: 3em`};\n  }\n  .my-4 {\n    background-color: #fff;\n    width: 60%;\n    ${media.tablet`width: 40%;`};\n    ${media.laptop`width: 25%;`};\n  }\n  .resultTxt {\n    font-family: ${fonts.$mainFont};\n    color: #870399;\n    text-align: center;\n    ${media.tablet`font-size: 2em`};\n    ${media.laptop`font-size: 2.2em`};\n  }\n  .my-5 {\n    width: 0;\n    margin-bottom: -1em !important;\n  }\n  .lead {\n    font-family: ${fonts.$titleFont};\n    text-align: center;\n    ${media.tablet`font-size: 2em`};\n  }\n  .list-group {\n    padding: 0 2em;\n    ${media.tablet`padding: 0 5em;`};\n    ${media.laptop`padding: 0 25em;`};\n    .list-group-item {\n      background: ${colors.$colorCardBg};\n      background: repeating-linear-gradient(135deg, rgba(0, 0, 0, 0.3), transparent 1px, rgba(0, 0, 0, 0.3) 2px);\n      background-size: 3px 3px;\n      padding: 1em 1.25em;\n      font-family: ${fonts.$latoFont};\n      border: 0;\n      margin-bottom: 0;\n      color: #870399;\n      ${media.tablet`font-size: 1.3em`};\n      .icon {\n        display: inline-block;\n        position: absolute;\n        right: 5%;\n      }\n    }\n    &.briggs {\n      flex-direction: row;\n      flex-grow: 1;\n      .list-group-item {\n        text-align: center;\n        width: 30%;\n        .icon {\n          display: inline-block;\n          position: absolute;\n          right: 5%;\n        }\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { BrownDef, GreenDef, BlueDef, RedDef } from '../definitions/ColorsDef'\nimport { Wrapper } from '../utils/ResultWrapper'\nimport { NextBtn } from '../utils/Buttons'\n\nclass Colors extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showBrownDef: false,\n      showGreenDef: false,\n      showBlueDef: false,\n      showRedDef: false\n    }\n    this.onBrownDefClick = this.onBrownDefClick.bind(this)\n    this.onGreenDefClick = this.onGreenDefClick.bind(this)\n    this.onBlueDefClick = this.onBlueDefClick.bind(this)\n    this.onRedDefClick = this.onRedDefClick.bind(this)\n  }\n\n  renderNextBtn() {\n    return (\n      <NextBtn onClick={this.props._onNextClick}>\n        <span>Siguiente</span>\n        <div className=\"icon\">\n          <i className=\"fa fa-chevron-right\" />\n        </div>\n      </NextBtn>\n    )\n  }\n\n  renderBrownDef() {\n    return (\n      <BrownDef\n        title={'Definición tipo café'}\n        content={`Eres un constructor. Disfrutas liderar, crear y trabajar duro.\n                 Eres una persona tradicional con respecto hacia la autoridad.\n                  Tus fuerzas son tu diligencia, franqueza y practicidad.\n                  Tus debilidades son la falta de tacto, paciencia y habilidad de abstracción.`}\n        onBackClick={this.onBrownDefClick}\n      />\n    )\n  }\n\n  renderGreenDef() {\n    return (\n      <GreenDef\n        title={'Definición tipo verde'}\n        content={`Eres un planificador. Disfrutas soñar, conspirar e innovar.\n                  Tiendes a gastar mucho tiempo pensando.\n                  Tus fuerzas son tu visión, objetividad y atención al detalle.\n                  Tus debilidades son tu dificultad de ponerte en el presente, tu falta de practicidad y velocidad.`}\n        onBackClick={this.onGreenDefClick}\n      />\n    )\n  }\n\n  renderBlueDef() {\n    return (\n      <BlueDef\n        title={'Definición tipo azul'}\n        content={`Eres un relacionador. Disfrutas platicar, el romance y pasar tiempo con otros.\n                Eres una persona empatica que tiende a poner las necesidades de otros sobre las tuyas.\n                Tus fuerzas son tu simpatía, sinceridad y consciencia sobre tus emociones.\n                Tus debilidades son tu subjetividad, flexibilidad y manipulabilidad.`}\n        onBackClick={this.onBlueDefClick}\n      />\n    )\n  }\n\n  renderRedDef() {\n    return (\n      <RedDef\n        title={'Definición tipo roja'}\n        content={`Eres un aventurero. Disfrutas la acción, la emoción y el drama.\n                  Aceptas fácil el cambio y eres espontáneo.\n                  Tus fuerzas son tu tenacidad, intrepidez y adaptabilidad.\n                  Tus debilidades son tu descuido y tu falta de concentración y diligencia.`}\n        onBackClick={this.onRedDefClick}\n      />\n    )\n  }\n\n  render() {\n    let showBrownDef = this.state.showBrownDef\n    let showGreenDef = this.state.showGreenDef\n    let showBlueDef = this.state.showBlueDef\n    let showRedDef = this.state.showRedDef\n    if (showBrownDef) {\n      return this.renderBrownDef()\n    } else if (showGreenDef) {\n      return this.renderGreenDef()\n    } else if (showBlueDef) {\n      return this.renderBlueDef()\n    } else if (showRedDef) {\n      return this.renderRedDef()\n    }\n    return (\n      <Wrapper className=\"jumbotron\">\n        <h1 className=\"display-3 title\">Resultado de Color</h1>\n        <hr className=\"my-4\" />\n        <h2 className=\"display-6 resultTxt\">{this.props.resultColors}</h2>\n        <hr className=\"my-5\" />\n        <p className=\"lead\">¿Qué significa este resultado?</p>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\" onClick={this.onBrownDefClick}>\n            Brown\n            <div className=\"icon\">\n              <i className=\"fa fa-arrow-right\" />\n            </div>\n          </li>\n          <li className=\"list-group-item\" onClick={this.onGreenDefClick}>\n            Green\n            <div className=\"icon\">\n              <i className=\"fa fa-arrow-right\" />\n            </div>\n          </li>\n          <li className=\"list-group-item\" onClick={this.onBlueDefClick}>\n            Blue\n            <div className=\"icon\">\n              <i className=\"fa fa-arrow-right\" />\n            </div>\n          </li>\n          <li className=\"list-group-item\" onClick={this.onRedDefClick}>\n            Red\n            <div className=\"icon\">\n              <i className=\"fa fa-arrow-right\" />\n            </div>\n          </li>\n        </ul>\n        {this.renderNextBtn()}\n      </Wrapper>\n    )\n  }\n\n  onBrownDefClick() {\n    let showBrownDef = this.state.showBrownDef\n    this.setState({ showBrownDef: !showBrownDef })\n  }\n\n  onGreenDefClick() {\n    let showGreenDef = this.state.showGreenDef\n    this.setState({ showGreenDef: !showGreenDef })\n  }\n\n  onBlueDefClick() {\n    let showBlueDef = this.state.showBlueDef\n    this.setState({ showBlueDef: !showBlueDef })\n  }\n\n  onRedDefClick() {\n    let showRedDef = this.state.showRedDef\n    this.setState({ showRedDef: !showRedDef })\n  }\n}\n\nColors.propTypes = {\n  resultColors: PropTypes.string.isRequired,\n  resultBrown: PropTypes.string.isRequired,\n  resultGreen: PropTypes.string.isRequired,\n  resultBlue: PropTypes.string.isRequired,\n  resultRed: PropTypes.string.isRequired\n}\n\nexport default Colors\n","import React from 'react'\nimport { CardDef } from '../utils/Cards'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  position: fixed;\n  min-height: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst LetterA = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nconst LetterB = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nconst LetterC = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nconst LetterD = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport { LetterA, LetterB, LetterC, LetterD }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Wrapper } from '../utils/ResultWrapper'\nimport { LetterA, LetterB, LetterC, LetterD } from '../definitions/LettersDef'\nimport { NextBtn } from '../utils/Buttons'\n\nclass Letters extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showLetterA: false,\n      showLetterB: false,\n      showLetterC: false,\n      showLetterD: false\n    }\n    this.onLetterA_Click = this.onLetterA_Click.bind(this)\n    this.onLetterB_Click = this.onLetterB_Click.bind(this)\n    this.onLetterC_Click = this.onLetterC_Click.bind(this)\n    this.onLetterD_Click = this.onLetterD_Click.bind(this)\n  }\n\n  renderNextBtn() {\n    return (\n      <NextBtn onClick={this.props._onNextClick}>\n        <span>Siguiente</span>\n        <div className=\"icon\">\n          <i className=\"fa fa-chevron-right\" />\n        </div>\n      </NextBtn>\n    )\n  }\n\n  renderLetterA() {\n    return (\n      <LetterA\n        title={'Definición letra A'}\n        content={`Eres personalidad tipo A. Te gusta estar en control sobre todo.\n                Tus fuerzas son tu tenacidad, confianza y tu sentido práctico                .\n                Tus debilidades son tu falta de empatía, disciplina y conciencia de los detalles.`}\n        onBackClick={this.onLetterA_Click}\n      />\n    )\n  }\n\n  renderLetterB() {\n    return (\n      <LetterB\n        title={'Definición letra B'}\n        content={`Eres personalidad tipo B. Te gusta estar rodeado de personas.\n                Tus fuerzas son tu empatía, entusiasmo y espontaneidad.\n                Tus debilidades son tu falta de atención, paciencia y confianza.`}\n        onBackClick={this.onLetterB_Click}\n      />\n    )\n  }\n\n  renderLetterC() {\n    return (\n      <LetterC\n        title={'Definición letra C'}\n        content={`Eres personalidad tipo C. You like to Te gusta pensar bien las cosas.\n               Tus fuerzas son tu racionalidad, objetividad y originalidad.\n                Tus debilidades son tu falta de espontaneidad, practicidad y empatía.`}\n        onBackClick={this.onLetterC_Click}\n      />\n    )\n  }\n\n  renderLetterD() {\n    return (\n      <LetterD\n        title={'Definición letra D'}\n        content={`Eres personalidad tipo D. Te gusta sentirte a salvo y seguro en la vida.\n                  ´Tus fuerzas son tu organización, compasión y paciencia.\n                  Tus debilidades son tu falta de atención, adaptabilidad y asertividad.`}\n        onBackClick={this.onLetterD_Click}\n      />\n    )\n  }\n\n  render() {\n    let showLetterA = this.state.showLetterA\n    let showLetterB = this.state.showLetterB\n    let showLetterC = this.state.showLetterC\n    let showLetterD = this.state.showLetterD\n    if (showLetterA) {\n      return this.renderLetterA()\n    } else if (showLetterB) {\n      return this.renderLetterB()\n    } else if (showLetterC) {\n      return this.renderLetterC()\n    } else if (showLetterD) {\n      return this.renderLetterD()\n    }\n    return (\n      <Wrapper>\n        <h1 className=\"display-3 title\">Resultado de letras</h1>\n        <hr className=\"my-4\" />\n        <h2 className=\"display-6 resultTxt\">{this.props.resultLetters}</h2>\n        <hr className=\"my-5\" />\n        <p className=\"lead\">¿Qué significa este resultado?</p>\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\" onClick={this.onLetterA_Click}>\n            Letra A\n            <div className=\"icon\">\n              <i className=\"fa fa-arrow-right\" />\n            </div>\n          </li>\n          <li className=\"list-group-item\" onClick={this.onLetterB_Click}>\n           Letra B\n            <div className=\"icon\">\n              <i className=\"fa fa-arrow-right\" />\n            </div>\n          </li>\n          <li className=\"list-group-item\" onClick={this.onLetterC_Click}>\n           Letra C\n            <div className=\"icon\">\n              <i className=\"fa fa-arrow-right\" />\n            </div>\n          </li>\n          <li className=\"list-group-item\" onClick={this.onLetterD_Click}>\n           Letra D\n            <div className=\"icon\">\n              <i className=\"fa fa-arrow-right\" />\n            </div>\n          </li>\n        </ul>\n        {this.renderNextBtn()}\n      </Wrapper>\n    )\n  }\n\n  onLetterA_Click() {\n    let showLetterA = this.state.showLetterA\n    this.setState({ showLetterA: !showLetterA })\n  }\n\n  onLetterB_Click() {\n    let showLetterB = this.state.showLetterB\n    this.setState({ showLetterB: !showLetterB })\n  }\n\n  onLetterC_Click() {\n    let showLetterC = this.state.showLetterC\n    this.setState({ showLetterC: !showLetterC })\n  }\n\n  onLetterD_Click() {\n    let showLetterD = this.state.showLetterD\n    this.setState({ showLetterD: !showLetterD })\n  }\n}\n\nLetters.propTypes = {\n  resultLetters: PropTypes.string.isRequired\n}\n\nexport default Letters\n","import React from 'react'\nimport { CardDef } from '../utils/Cards'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  position: fixed;\n  min-height: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport const ISTJ = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ISFJ = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const INFJ = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const INTJ = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ISTP = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ISFP = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const INFP = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const INTP = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ESTP = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ESFP = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ENFP = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ENTP = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ESTJ = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ESFJ = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ENFJ = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n\nexport const ENTJ = ({ title, content, onBackClick }) => {\n  return (\n    <Wrapper className=\"container\">\n      <CardDef>\n        <h1>{title}</h1>\n        <div className=\"close\" onClick={onBackClick}>\n          <i className=\"fa fa-times\" aria-hidden=\"true\" />\n        </div>\n        <p className=\"text-justify\">{content}</p>\n      </CardDef>\n    </Wrapper>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Wrapper } from '../utils/ResultWrapper'\nimport {\n  ISTJ,\n  ISFJ,\n  INFJ,\n  INTJ,\n  ISTP,\n  ISFP,\n  INFP,\n  INTP,\n  ESTP,\n  ESFP,\n  ENFP,\n  ENTP,\n  ESTJ,\n  ESFJ,\n  ENFJ,\n  ENTJ\n} from '../definitions/BriggsDef'\n\nclass Briggs extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showISTJ: false,\n      showISFJ: false,\n      showINFJ: false,\n      showINTJ: false,\n      showISTP: false,\n      showISFP: false,\n      showINFP: false,\n      showINTP: false,\n      showESTP: false,\n      showESFP: false,\n      showENFP: false,\n      showENTP: false,\n      showESTJ: false,\n      showESFJ: false,\n      showENFJ: false,\n      showENTJ: false\n    }\n    this.onISTJ_click = this.onISTJ_click.bind(this)\n    this.onISFJ_click = this.onISFJ_click.bind(this)\n    this.onINFJ_click = this.onINFJ_click.bind(this)\n    this.onINTJ_click = this.onINTJ_click.bind(this)\n    this.onISTP_click = this.onISTP_click.bind(this)\n    this.onISFP_click = this.onISFP_click.bind(this)\n    this.onINFP_click = this.onINFP_click.bind(this)\n    this.onINTP_click = this.onINTP_click.bind(this)\n    this.onESTP_click = this.onESTP_click.bind(this)\n    this.onESFP_click = this.onESFP_click.bind(this)\n    this.onENFP_click = this.onENFP_click.bind(this)\n    this.onENTP_click = this.onENTP_click.bind(this)\n    this.onESTJ_click = this.onESTJ_click.bind(this)\n    this.onESFJ_click = this.onESFJ_click.bind(this)\n    this.onENFJ_click = this.onENFJ_click.bind(this)\n    this.onENTJ_click = this.onENTJ_click.bind(this)\n  }\n\n  renderISTJ() {\n    return (\n      <ISTJ\n        title={'Introvertido | Sensible | Pensante | Juez'}\n        content={`El Inspector.\n                Tiendes a ser practico y lógico sobre todo.\n                Deberías considerar un trabajo en contadodría o ingeniería.`}\n        onBackClick={this.onISTJ_click}\n      />\n    )\n  }\n\n  renderISFJ() {\n    return (\n      <ISFJ\n        title={'Introvertido | Sensible | Sentimental | Juez'}\n        content={`el Protector.\n                  Tiendes a ser simpatico y organizado sobre todo.\n                  Deberías considerar un trabajo para cuidar niños o en librerías.`}\n        onBackClick={this.onISFJ_click}\n      />\n    )\n  }\n\n  renderINFJ() {\n    return (\n      <INFJ\n        title={'Introverido | iNtuitivo | Sentimental | Juez'}\n        content={`El Consejero.\n               Tiendes a ser sensible y creativo sobre todo.\n                Deberías considerar un trabajo en educación o en artes.`}\n        onBackClick={this.onINFJ_click}\n      />\n    )\n  }\n\n  renderINTJ() {\n    return (\n      <INTJ\n        title={'Introvertido | iNtuitive | Pensante | Juez'}\n        content={`La Mente Maestra.\n                      Tiendes a ser decisivo y perspicaz sobre todo.\n                      Deberías considerar un trabajo en arquitectura o en ingeniería.`}\n        onBackClick={this.onINTJ_click}\n      />\n    )\n  }\n\n  renderISTP() {\n    return (\n      <ISTP\n        title={'Introvertido | Sensible | Pensante | Perceptivo'}\n        content={`El Operador.\n                  Tiendes a ser análitico y práctico sobre todo.\n                  Deberías considerar un trabajo en informática o en agricultura.`}\n        onBackClick={this.onISTP_click}\n      />\n    )\n  }\n\n  renderISFP() {\n    return (\n      <ISFP\n        title={'Introvertido | Sensible | Sentimental | Perceptivo'}\n        content={`El Compositor.\n                  Tiendes a ser leal y adaptable sobre todo.\n                  Deberías considerar un trabajo enseñando o en enfermería.`}\n        onBackClick={this.onISFP_click}\n      />\n    )\n  }\n\n  renderINFP() {\n    return (\n      <INFP\n        title={'Introvertido | iNtuitivo | Sentimental | Perceptivo'}\n        content={`El Sanador.\n                 Tiendes a ser empatico y curioso sobre todo.\n                  Deberías considerar un trabajo de escritor o en diseño gráfico`}\n        onBackClick={this.onINFP_click}\n      />\n    )\n  }\n\n  renderINTP() {\n    return (\n      <INTP\n        title={'Introvertido | iNtuitivo | Pensante | Perceptivo'}\n        content={`El Arquitecto.\n                  Tiendes a ser curioso y analitico sobre todo.\n                  Deberías considerar un trabajo en arquitectura o en construcción.`}\n        onBackClick={this.onINTP_click}\n      />\n    )\n  }\n\n  renderESTP() {\n    return (\n      <ESTP\n        title={'Extrovertido | Sensible | Pensante | Perceptivo'}\n        content={`El Promotor.\n                  Tiendes a ser energetico y realista sobre todo.\n                  Deberías considerar un trabajo en ventas o de guardabosques.`}\n        onBackClick={this.onESTP_click}\n      />\n    )\n  }\n\n  renderESFP() {\n    return (\n      <ESFP\n        title={'Extrovertido | Sensible | Sentimental | Perceptivo'}\n        content={`El Intérprete.\n                 Tiendes a ser cuidadoso e ingenioso sobre todo.\n                  Deberías considerar un trabajo en hospitalidad o en cuidado de la salud.`}\n        onBackClick={this.onESFP_click}\n      />\n    )\n  }\n\n  renderENFP() {\n    return (\n      <ENFP\n        title={'Extrovertido | iNtuitivo | Sentimental | Perceptivo'}\n        content={`El Campeón.\n                  Tiendes a ser imaginativo y perspicaz sobre todo.\n                  Deberías considerar un trabajo en terapía o en artes.`}\n        onBackClick={this.onENFP_click}\n      />\n    )\n  }\n\n  renderENTP() {\n    return (\n      <ENTP\n        title={'Extrovertido | iNtuitivo | Pensante | Perceptivo'}\n        content={`El Inventor.\n                  Tiendes a ser entusiasta y teorico sobre todo.\n                  Deberías considerar un trabajo en negocios o en deportes.`}\n        onBackClick={this.onENTP_click}\n      />\n    )\n  }\n\n  renderESTJ() {\n    return (\n      <ESTJ\n        title={'Extrovertido | Sensible | Pensante | Juez'}\n        content={`El Supervisor.\n                  Tiendes a ser lógico y asertivo sobre todo.\n                  Deberías considerar un trabajo en liderazgo o en leyes.`}\n        onBackClick={this.onESTJ_click}\n      />\n    )\n  }\n\n  renderESFJ() {\n    return (\n      <ESFJ\n        title={'Extrovertido | Sensible | Sentimental | Juez'}\n        content={`El Proveedor.\n                  Tiendes a ser sociable y atento sobre todo.\n                  Deberías considerar un trabajo en cuidado de niños o en cuidado de la salud.`}\n        onBackClick={this.onESFJ_click}\n      />\n    )\n  }\n\n  renderENFJ() {\n    return (\n      <ENFJ\n        title={'Extrovertido | iNtuitivo | Sentimental | Juez'}\n        content={`El Maestro.\n                 Tiendes a ser pasionado e imaginatico sobre todo.\n                 Deberías considerar un trabajo de maestro o en artes.`}\n        onBackClick={this.onENFJ_click}\n      />\n    )\n  }\n\n  renderENTJ() {\n    return (\n      <ENTJ\n        title={'Extrovertido | iNtuitivo | Pensante | Juez'}\n        content={`El Mariscal de Campo.\n                  Tiendes a ser organizado y lógico sobre todo.\n                  Deberías considerar un trabajo en leyes o ingeniería.`}\n        onBackClick={this.onENTJ_click}\n      />\n    )\n  }\n\n  render() {\n    let showISTJ = this.state.showISTJ\n    let showISFJ = this.state.showISFJ\n    let showINFJ = this.state.showINFJ\n    let showINTJ = this.state.showINTJ\n    let showISTP = this.state.showISTP\n    let showISFP = this.state.showISFP\n    let showINFP = this.state.showINFP\n    let showINTP = this.state.showINTP\n    let showESTP = this.state.showESTP\n    let showESFP = this.state.showESFP\n    let showENFP = this.state.showENFP\n    let showENTP = this.state.showENTP\n    let showESTJ = this.state.showESTJ\n    let showESFJ = this.state.showESFJ\n    let showENFJ = this.state.showENFJ\n    let showENTJ = this.state.showENTJ\n    if (showISTJ) {\n      return this.renderISTJ()\n    } else if (showISFJ) {\n      return this.renderISFJ()\n    } else if (showINFJ) {\n      return this.renderINFJ()\n    } else if (showINTJ) {\n      return this.renderINTJ()\n    } else if (showISTP) {\n      return this.renderISTP()\n    } else if (showISFP) {\n      return this.renderISFP()\n    } else if (showINFP) {\n      return this.renderINFP()\n    } else if (showINTP) {\n      return this.renderINTP()\n    } else if (showESTP) {\n      return this.renderESTP()\n    } else if (showESFP) {\n      return this.renderESFP()\n    } else if (showENFP) {\n      return this.renderENFP()\n    } else if (showENTP) {\n      return this.renderENTP()\n    } else if (showESTJ) {\n      return this.renderESTJ()\n    } else if (showESFJ) {\n      return this.renderESFJ()\n    } else if (showENFJ) {\n      return this.renderENFJ()\n    } else if (showENTJ) {\n      return this.renderENTJ()\n    }\n    return (\n      <Wrapper>\n        <h1 className=\"display-3 title\">Resultado</h1>\n        <hr className=\"my-4\" />\n        <h2 className=\"display-6 resultTxt\">{this.props.resultBriggs}</h2>\n        <hr className=\"my-5\" />\n        <p className=\"lead\">Que significa este resultado?</p>\n        <ul className=\"list-group briggs\">\n          <li className=\"list-group-item\" onClick={this.onISTJ_click}>\n            ISTJ\n          </li>\n          <li className=\"list-group-item\" onClick={this.onISFJ_click}>\n            ISFJ\n          </li>\n          <li className=\"list-group-item\" onClick={this.onINFJ_click}>\n            INFJ\n          </li>\n          <li className=\"list-group-item\" onClick={this.onINTJ_click}>\n            INTJ\n          </li>\n        </ul>\n        <ul className=\"list-group briggs\">\n          <li className=\"list-group-item\" onClick={this.onISTP_click}>\n            ISTP\n          </li>\n          <li className=\"list-group-item\" onClick={this.onISFP_click}>\n            ISFP\n          </li>\n          <li className=\"list-group-item\" onClick={this.onINFP_click}>\n            INFP\n          </li>\n          <li className=\"list-group-item\" onClick={this.onINTP_click}>\n            INTP\n          </li>\n        </ul>\n        <ul className=\"list-group briggs\">\n          <li className=\"list-group-item\" onClick={this.onESTP_click}>\n            ESTP\n          </li>\n          <li className=\"list-group-item\" onClick={this.onESFP_click}>\n            ESFP\n          </li>\n          <li className=\"list-group-item\" onClick={this.onENFP_click}>\n            ENFP\n          </li>\n          <li className=\"list-group-item\" onClick={this.onENTP_click}>\n            ENTP\n          </li>\n        </ul>\n        <ul className=\"list-group briggs\">\n          <li className=\"list-group-item\" onClick={this.onESTJ_click}>\n            ESTJ\n          </li>\n          <li className=\"list-group-item\" onClick={this.onESFJ_click}>\n            ESFJ\n          </li>\n          <li className=\"list-group-item\" onClick={this.onENFJ_click}>\n            ENFJ\n          </li>\n          <li className=\"list-group-item\" onClick={this.onENTJ_click}>\n            ENTJ\n          </li>\n        </ul>\n      </Wrapper>\n    )\n  }\n\n  onISTJ_click() {\n    let showISTJ = this.state.showISTJ\n    this.setState({ showISTJ: !showISTJ })\n  }\n\n  onISFJ_click() {\n    let showISFJ = this.state.showISFJ\n    this.setState({ showISFJ: !showISFJ })\n  }\n\n  onINFJ_click() {\n    let showINFJ = this.state.showINFJ\n    this.setState({ showINFJ: !showINFJ })\n  }\n\n  onINTJ_click() {\n    let showINTJ = this.state.showINTJ\n    this.setState({ showINTJ: !showINTJ })\n  }\n\n  onISTP_click() {\n    let showISTP = this.state.showISTP\n    this.setState({ showISTP: !showISTP })\n  }\n\n  onISFP_click() {\n    let showISFP = this.state.showISFP\n    this.setState({ showISFP: !showISFP })\n  }\n\n  onINFP_click() {\n    let showINFP = this.state.showINFP\n    this.setState({ showINFP: !showINFP })\n  }\n\n  onINTP_click() {\n    let showINTP = this.state.showINTP\n    this.setState({ showINTP: !showINTP })\n  }\n\n  onESTP_click() {\n    let showESTP = this.state.showESTP\n    this.setState({ showESTP: !showESTP })\n  }\n\n  onESFP_click() {\n    let showESFP = this.state.showESFP\n    this.setState({ showESFP: !showESFP })\n  }\n\n  onENFP_click() {\n    let showENFP = this.state.showENFP\n    this.setState({ showENFP: !showENFP })\n  }\n\n  onENTP_click() {\n    let showENTP = this.state.showENTP\n    this.setState({ showENTP: !showENTP })\n  }\n\n  onESTJ_click() {\n    let showESTJ = this.state.showESTJ\n    this.setState({ showESTJ: !showESTJ })\n  }\n\n  onESFJ_click() {\n    let showESFJ = this.state.showESFJ\n    this.setState({ showESFJ: !showESFJ })\n  }\n\n  onENFJ_click() {\n    let showENFJ = this.state.showENFJ\n    this.setState({ showENFJ: !showENFJ })\n  }\n\n  onENTJ_click() {\n    let showENTJ = this.state.showENTJ\n    this.setState({ showENTJ: !showENTJ })\n  }\n}\n\nBriggs.propTypes = {\n  resultBriggs: PropTypes.string.isRequired\n}\n\nexport default Briggs\n","import React, { Component } from 'react'\nimport Colors from '../result/Colors'\nimport Letters from '../result/Letters'\nimport Briggs from '../result/Briggs'\n\nclass Results extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showColorsResult: true,\n      showLettersResult: false,\n      showBriggsResult: false\n    }\n    this._onNextClick = this._onNextClick.bind(this)\n  }\n\n  renderResultColors() {\n    return <Colors resultColors={this.props.resultColors} _onNextClick={this._onNextClick} />\n  }\n\n  renderResultLetters() {\n    return <Letters resultLetters={this.props.resultLetters} _onNextClick={this._onNextClick} />\n  }\n\n  renderBriggsResult() {\n    return <Briggs resultBriggs={this.props.resultBriggs} />\n  }\n\n  render() {\n    let showColorsResult = this.state.showColorsResult\n    let showLettersResult = this.state.showLettersResult\n    let showBriggsResult = this.state.showBriggsResult\n    if (showColorsResult) {\n      return this.renderResultColors()\n    } else if (showLettersResult) {\n      return this.renderResultLetters()\n    } else if (showBriggsResult) {\n      return this.renderBriggsResult()\n    }\n  }\n\n  _onNextClick() {\n    let showColorsResult = this.state.showColorsResult\n    let showLettersResult = this.state.showLettersResult\n    let showBriggsResult = this.state.showBriggsResult\n\n    if (showColorsResult) {\n      setTimeout(() => {\n        this.setState({\n          showColorsResult: !showColorsResult, // -> false\n          showLettersResult: !showLettersResult // -> true\n        })\n      }, 800)\n    } else if (showLettersResult) {\n      setTimeout(() => {\n        this.setState({\n          showLettersResult: !showLettersResult, // false\n          showBriggsResult: !showBriggsResult // true\n        })\n      }, 800)\n    }\n  }\n}\n\nexport default Results\n","// briggs: EI, SN, TF, JP\n// color: brown, green, blue, red\n// letter: a, b, c, d\nvar quizQuestions = [\n  // question #1\n  {\n    question: 'Organizo mis tareas para conseguir ciertas metas.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'J,Brown,D',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'J,Brown,D,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #2\n  {\n    question: 'Me aburro facilmente cuando discuto sobre conceptos abstractos.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'N,Green,C',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'N,Green,C,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #3\n  {\n    question: 'Tengo la iniciativa de probar cosas nuevas.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'S,Red,A',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'S,Red,A,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #4\n  {\n    question: \"Me gusta saber a donde voy antes de salir de casa.\",\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'J,Brown,D',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'J,Brown,D,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #5\n  {\n    question: 'Creo que hay una explicación lógica para todo.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'T,Brown,C',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'T,Brown,C,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #6\n  {\n    question: 'Tiendo a mantener mi circulo social pequeño.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'I,Green,C',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'I,Green,C,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #7\n  {\n    question: 'Me gusta compartir mis ideas con otras personas.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'E,Blue,B',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'E,Blue,B,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #8\n  {\n    question: 'Disfruto usar las redes sociales.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'E,Blue,B',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'E,Blue,B,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #9\n  {\n    question: 'Constantemente expreso preocupación por los demás cuando tomo decisiones.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'F,Blue,B',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'F,Blue,B,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #10\n  {\n    question: 'Aprendo mejor observando paso a paso las instrucciones.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'S,Brown,D',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'S,Brown,D,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #11\n  {\n    question: 'Puedo adaptarme fácilmente a un cambio de decisión.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'P,Red,A',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'P,Red,A,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #12\n  {\n    question: 'Resuelvo problemas de forma lógica, basándome en hechos y no en suposiciones.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'S,Brown,C',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'S,Brown,C,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #13\n  {\n    question: 'Confío en la lógica en lugar de la intuición al tomar una decisión.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'T,Green,C',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'T,Green,C,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #14\n  {\n    question: 'Priorizo mis sentimientos en el momento de tomar decisiones.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'F,Blue,B',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'F,Blue,B,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #15\n  {\n    question: 'Me gusta probar nuevas cosas.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'P,Red,A',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'P,Red,A,No',\n        content: \"¡No!\"\n      }\n    ]\n    \n  },\n  // question #16\n  {\n    question: 'A veces paso a otra tarea antes de completar la actual.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'P,Red,A',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'P,Red,A,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #17\n  {\n    question: 'Prefiero una forma de vida flexible y espontánea.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'P,Red,A',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'P,Red,A,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #18\n  {\n    question: 'Considero todas las opciones posibles al momento de tomar decisiones.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'P,Green,D',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'P,Green,D,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #19\n  {\n    question: 'No me incomodan las multitudes.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'E,Blue,B',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'E,Blue,B,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #20\n  {\n    question: 'Me gusta compartir mis sentimientos con los demás.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'E,Blue,B',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'E,Blue,B,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #21\n  {\n    question: 'Prefiero trabajar/hacerlo de inmediato en lugar de dedicar tiempo a hacer un plan.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'S,Brown,A',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'S,Brown,A,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #22\n  {\n    question: 'Conozco mis prioridades.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'S,Brown,A',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'S,Brown,A,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #23\n  {\n    question: 'Tiendo a trabajar en soledad.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'I,Green,D',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'I,Green,D,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #24\n  {\n    question: \"No me gusta ir a fiestas.\",\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'I,Green,C',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'I,Green,C,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #25\n  {\n    question: 'Estoy en sintonía con mis propias emociones y dejo que me guíen en la vida.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'F,Blue,B',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'F,Blue,B,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #26\n  {\n    question: 'Confío en mi intuición y experiencia más que en hechos.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'N,Red,A',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'N,Red,A,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #27\n  {\n    question: 'Me gusta pensar las cosas bien.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'T,Green,D',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'T,Green,D,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #28\n  {\n    question: 'Soy un aprendiz visual.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'S,Red,A',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'S,Red,A,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #29\n  {\n    question: 'Pienso cuidadosamente antes de tomar una decisión.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'J,Brown,D',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'J,Brown,D,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #30\n  {\n    question: 'Siento incomodidad si mis acciones interrumpen la armonía en mi círculo social.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'F,Blue,B',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'F,Blue,B,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #31\n  {\n    question: 'Mis opiniones personales consideran la equidad y la justicia para un bien común.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'T,Brown,C',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'T,Brown,C,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #32\n  {\n    question: 'Tiendo a sentarme en la parte de atrás o en la esquina de la habitación.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'I,Green,C',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'I,Green,C,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #33\n  {\n    question: 'Me gusta ser el centro de atención.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'E,Red,B',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'E,Red,B,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #34\n  {\n    question: 'Resuelvo problemas saltando entre diferentes ideas y posibilidades.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'N,Green,C',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'N,Green,C,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #35\n  {\n    question: 'Me gusta terminar mi trabajo antes de jugar.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'J,Red,D',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'J,Red,D,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #36\n  {\n    question: \"No dejo que otras personas influyan en mis pensamientos o acciones.\",\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'T,Red,A',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'T,Red,A,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #37\n  {\n    question: 'Uso mi sentido del olfato para ayudarme a recordar.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'N,Blue,D',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'N,Blue,D,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #38\n  {\n    question: 'Tomo decisiones basándome en mis emociones.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'F,Blue,B',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'F,Blue,B,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #39\n  {\n    question: 'Constantemente tomo un tiempo a solas para sentirme mejor.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'I,Green,C',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'I,Green,C,No',\n        content: \"¡No!\"\n      }\n    ]\n  },\n  // question #40\n  {\n    question: 'Me gusta mantener mi cuarto limpio y organizado.',\n    answers: [\n      {\n        // briggs, color, letter\n        type: 'J,Brown,D',\n        content: '¡Si!'\n      },\n      {\n        type: ' ',\n        content: '¡Me es indiferente!'\n      },\n      {\n        type: 'J,Brown,D,No',\n        content: \"¡No!\"\n      }\n    ]\n  }\n]\n\nexport default quizQuestions\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { colors } from '../components/utils/_var'\nimport Quiz from '../components/quiz/Quiz'\nimport Results from '../components/result/Results'\nimport quizQuestions from '../api/quizQuestions'\nimport { QuestionCard } from '../components/utils/Cards'\n\nconst Wrapper = styled.div`\n  position: fixed;\n  min-height: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: ${colors.$colorBg};\n`\n\nclass Question extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {\n        Colors: {\n          Green: 10,\n          Brown: 10,\n          Blue: 10,\n          Red: 10\n        },\n        Letters: {\n          A: 10,\n          B: 10,\n          C: 10,\n          D: 10\n        },\n        Briggs: {\n          E: 5,\n          I: 5,\n          S: 5,\n          N: 5,\n          T: 5,\n          F: 5,\n          J: 5,\n          P: 5\n        }\n      },\n      resultBriggs: '',\n      resultColors: '',\n      resultLetters: ''\n    }\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this)\n  }\n\n  \n  componentWillMount() {\n    const answerOptions = quizQuestions.map(question => question.answers)\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: answerOptions[0]\n    })\n  }\n\n  // configurando la respuesta segun el usuario\n  setUserAnswer(answer) {\n    const answersCount = this.state.answersCount\n    let applyAnswer = answer => {\n      const answer_array = answer.split(',')\n      let briggsAnswer = answer_array[0]\n      let colorsAnswer = answer_array[1]\n      let lettersAnswer = answer_array[2]\n      if (answer_array.length === 3) {\n        answersCount['Briggs'][briggsAnswer] += 1\n        answersCount['Colors'][colorsAnswer] += 1\n        answersCount['Letters'][lettersAnswer] += 1\n      } else if (answer_array.length === 4) {\n        answersCount['Briggs'][briggsAnswer] -= 1\n        answersCount['Colors'][colorsAnswer] -= 1\n        answersCount['Letters'][lettersAnswer] -= 1\n      }\n      return answersCount\n    }\n    this.setState({\n      answersCount: applyAnswer(answer),\n      answer: answer\n    })\n  }\n\n  // incrementar el contador y el estado de questionID\n  setNextQuestion() {\n    const counter = this.state.counter + 1\n    const questionId = this.state.questionId + 1\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    })\n  }\n\n  // ajustando respeusta y siguiente pregunta\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value)\n    if (this.state.questionId < quizQuestions.length) {\n      setTimeout(() => this.setNextQuestion(), 800)\n    } else {\n      setTimeout(() => this.setResults(this.getColorsResults(), this.getLettersResults(), this.getBriggsResults()), 800)\n    }\n  }\n\n  // ===========================================================================\n  //                        obtener resultados\n  // ===========================================================================\n  getBriggsResults() {\n    const answerCount = this.state.answersCount\n    const briggsAnswer = answerCount['Briggs']\n    const answersCountKeysBriggs = Object.keys(briggsAnswer)\n    const answersCountValuesBriggs = answersCountKeysBriggs.map(key => briggsAnswer[key])\n    let briggsType = ''\n    if (briggsAnswer.E >= briggsAnswer.I) {\n      briggsType += 'E'\n    } else briggsType += 'I'\n    if (briggsAnswer.S >= briggsAnswer.N) {\n      briggsType += 'S'\n    } else briggsType += 'N'\n    if (briggsAnswer.T >= briggsAnswer.F) {\n      briggsType += 'T'\n    } else briggsType += 'F'\n    if (briggsAnswer.J >= briggsAnswer.P) {\n      briggsType += 'J'\n    } else briggsType += 'P'\n    return briggsType\n  }\n\n  getColorsResults() {\n    const answersCount = this.state.answersCount\n    const colorsAnswer = answersCount['Colors']\n    const answersCountKeysColors = Object.keys(colorsAnswer)\n    const answersCountValuesColors = answersCountKeysColors.map(key => colorsAnswer[key])\n    const maxAnswerCountColors = Math.max.apply(null, answersCountValuesColors)\n    return answersCountKeysColors.filter(key => colorsAnswer[key] === maxAnswerCountColors)\n  }\n\n  getLettersResults() {\n    const answersCount = this.state.answersCount\n    const lettersAnswer = answersCount['Letters']\n    const answersCountKeysLetters = Object.keys(lettersAnswer)\n    const answersCountValuesLetters = answersCountKeysLetters.map(key => lettersAnswer[key])\n    const maxAnswerCountLetters = Math.max.apply(null, answersCountValuesLetters)\n    return answersCountKeysLetters.filter(key => lettersAnswer[key] === maxAnswerCountLetters)\n  }\n\n  // ===========================================================================\n  //                        set resultados\n  // ===========================================================================\n  setResults(resultColors, resultLetters, resultBriggs) {\n    if (resultColors.length >= 1) {\n      this.setState({ resultColors: resultColors[0] })\n    }\n    if (resultLetters.length >= 1) {\n      this.setState({ resultLetters: resultLetters[0] })\n    }\n    if (resultBriggs.length >= 1) {\n      this.setState({ resultBriggs: resultBriggs })\n    }\n  }\n\n  // ===========================================================================\n  //                    funciones para renderizar el quiz\n  // ===========================================================================\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={quizQuestions.length}\n        onAnswerSelected={this.handleAnswerSelected}\n      />\n    )\n  }\n\n  // ===========================================================================\n  //                    funciones para renderizar el resultado\n  // ===========================================================================\n  renderResult() {\n    return (\n      <Results\n        resultColors={this.state.resultColors}\n        resultLetters={this.state.resultLetters}\n        resultBriggs={this.state.resultBriggs}\n      />\n    )\n  }\n\n  // ===========================================================================\n  //                       renderizar esta pagina\n  // ===========================================================================\n  render() {\n    let resultBriggs = this.state.resultBriggs\n    if (resultBriggs) {\n      return this.renderResult()\n    }\n    return (\n      <Wrapper className=\"container\">\n        <QuestionCard>\n          <div className=\"corner\" />\n          <div className=\"corner\" />\n          <div className=\"corner\" />\n          <div className=\"corner\" />\n          {this.renderQuiz()}\n        </QuestionCard>\n      </Wrapper>\n    )\n  }\n}\n\nexport default Question\n","import React, { Component } from 'react'\nimport anime from 'animejs'\nimport Intro from './components/Intro'\nimport Question from './components/Question'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showQuestion: false\n    }\n    this._onStartClick = this._onStartClick.bind(this)\n  }\n\n  renderIntro() {\n    return <Intro _onStartClick={this._onStartClick} title=\"Bienvenido a este test de personalidad\" />\n  }\n\n  renderQuestion() {\n    return <Question />\n  }\n\n  render() {\n    let showQuestion = this.state.showQuestion\n    if (showQuestion) {\n      return this.renderQuestion()\n    }\n    return this.renderIntro()\n  }\n\n  _onStartClick() {\n    this.animateOut()\n    setTimeout(() => this.setState({ showQuestion: !this.state.showQuestion }), 1000)\n  }\n\n  animateOut() {\n    setTimeout(\n      () =>\n        anime({\n          targets: '.card',\n          translateX: '150%',\n          elasticity: function(el, i, l) {\n            return 200 + i * 200\n          }\n        }),\n      200\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { colors } from './components/utils/_var'\nimport { createGlobalStyle } from 'styled-components'\nimport registerServiceWorker from './registerServiceWorker'\n\n// global styles\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: ${colors.$colorBg};\n    color: #fff;\n  }\n`\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n "],"sourceRoot":""}